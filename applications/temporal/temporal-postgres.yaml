---
# Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: temporal
---
# PostgreSQL ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: temporal
data:
  POSTGRES_DB: temporal
  POSTGRES_USER: temporal
  POSTGRES_PASSWORD: temporal123
---
# PostgreSQL PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: temporal
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: microk8s-hostpath
  resources:
    requests:
      storage: 20Gi
---
# PostgreSQL Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: temporal
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
        envFrom:
        - configMapRef:
            name: postgres-config
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
          subPath: postgres
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc
---
# PostgreSQL Service
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: temporal
spec:
  selector:
    app: postgres
  ports:
  - port: 5432
    targetPort: 5432
---
# Temporal Environment ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: temporal-env-config
  namespace: temporal
data:
  ENABLE_ES: "false"
  ES_SEEDS: ""
  ES_PORT: "9200"
  POSTGRES_USER: temporal
  POSTGRES_PWD: temporal123
  POSTGRES_SEEDS: postgres
  DB: postgresql
  DB_PORT: "5432"
  PROMETHEUS_ENDPOINT: "0.0.0.0:8000"
  DYNAMIC_CONFIG_FILE_PATH: "config/dynamicconfig/development-sql.yaml"
  TEMPORAL_BIND_ON_IP: "0.0.0.0"
  TEMPORAL_ADDRESS: "0.0.0.0:7233"
  TEMPORAL_FRONTEND_ADDRESS: "0.0.0.0:7233"
---
# Temporal Dynamic Config
apiVersion: v1
kind: ConfigMap
metadata:
  name: temporal-dynamic-config
  namespace: temporal
data:
  development-sql.yaml: |
    # Dynamic config for development
    system.forceSearchAttributesCacheRefreshOnRead:
    - value: true
---
# Temporal Server Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: temporal
  namespace: temporal
spec:
  replicas: 1
  selector:
    matchLabels:
      app: temporal
  template:
    metadata:
      labels:
        app: temporal
    spec:
      containers:
      - name: temporal
        image: temporalio/auto-setup:1.22.4
        ports:
        - containerPort: 7233
          name: grpc
        - containerPort: 8000
          name: metrics
        - containerPort: 8080
          name: ui
        envFrom:
        - configMapRef:
            name: temporal-env-config
        volumeMounts:
        - name: dynamic-config
          mountPath: /etc/temporal/config/dynamicconfig
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        readinessProbe:
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 10
          tcpSocket:
            port: 7233
        livenessProbe:
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
          tcpSocket:
            port: 7233
      volumes:
      - name: dynamic-config
        configMap:
          name: temporal-dynamic-config
---
# Temporal Frontend Service
apiVersion: v1
kind: Service
metadata:
  name: temporal-frontend
  namespace: temporal
spec:
  selector:
    app: temporal
  ports:
  - port: 7233
    targetPort: 7233
    name: grpc
---
# Temporal UI ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: temporal-ui-config
  namespace: temporal
data:
  config.js: |
    window.temporalUiConfig = {
      baseUrl: '/',
      api: {
        baseUrl: '',
      },
    };
---
# Temporal UI Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: temporal-ui
  namespace: temporal
spec:
  replicas: 1
  selector:
    matchLabels:
      app: temporal-ui
  template:
    metadata:
      labels:
        app: temporal-ui
    spec:
      containers:
      - name: temporal-ui
        image: temporalio/ui:latest
        ports:
        - containerPort: 8080
        env:
        - name: TEMPORAL_ADDRESS
          value: temporal-frontend:7233
        - name: TEMPORAL_CORS_ORIGINS
          value: http://localhost:3000
        - name: TEMPORAL_UI_PORT
          value: "8080"
        volumeMounts:
        - name: config
          mountPath: /usr/share/nginx/html/config.js
          subPath: config.js
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
      volumes:
      - name: config
        configMap:
          name: temporal-ui-config
---
# Temporal UI Service
apiVersion: v1
kind: Service
metadata:
  name: temporal-ui
  namespace: temporal
spec:
  selector:
    app: temporal-ui
  type: NodePort
  ports:
  - port: 8080
    targetPort: 8080
    nodePort: 30880
---
# Temporal Frontend External Service
apiVersion: v1
kind: Service
metadata:
  name: temporal-frontend-external
  namespace: temporal
spec:
  type: NodePort
  selector:
    app: temporal
  ports:
  - name: grpc
    port: 7233
    targetPort: 7233
    nodePort: 30733