---
apiVersion: v1
kind: Namespace
metadata:
  name: pulsar
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: pulsar-standalone
  namespace: pulsar
spec:
  serviceName: pulsar-standalone
  replicas: 1
  selector:
    matchLabels:
      app: pulsar-standalone
  template:
    metadata:
      labels:
        app: pulsar-standalone
    spec:
      securityContext:
        fsGroup: 10000
        runAsUser: 10000
        runAsNonRoot: true
      containers:
      - name: pulsar
        image: apachepulsar/pulsar:3.2.0
        env:
        - name: PULSAR_GC_LOG_DIR
          value: "/tmp"
        - name: PULSAR_LOG_DIR
          value: "/tmp"
        - name: PULSAR_PREFIX_VERBOSE_GC
          value: "false"
        - name: PULSAR_MEM
          value: "-Xms1g -Xmx1g -XX:MaxDirectMemorySize=1g"
        - name: PULSAR_LOG_LEVEL
          value: "info"
        - name: PULSAR_LOG_ROOT_LEVEL
          value: "info"
        - name: PULSAR_EXTRA_OPTS
          value: "-Dpulsar.allocator.exit_on_oom=true"
        - name: PULSAR_STANDALONE_USE_ZOOKEEPER
          value: "1"
        command:
          - sh
          - -c
          - |
            # Create directories with proper permissions
            mkdir -p /pulsar/data/standalone /tmp/pulsar-logs
            
            # Disable GC logging to avoid permission issues
            export PULSAR_GC=""
            
            # Start Pulsar in standalone mode
            bin/pulsar standalone \
              --advertised-address pulsar-standalone.pulsar.svc.cluster.local \
              --no-functions-worker \
              --no-stream-storage
        ports:
        - name: broker
          containerPort: 6650
        - name: http
          containerPort: 8080
        - name: zookeeper
          containerPort: 2181
        volumeMounts:
        - name: pulsar-data
          mountPath: /pulsar/data
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "3Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /admin/v2/brokers/health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /admin/v2/brokers/ready
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
  volumeClaimTemplates:
  - metadata:
      name: pulsar-data
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: microk8s-hostpath
      resources:
        requests:
          storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: pulsar-standalone
  namespace: pulsar
spec:
  clusterIP: None
  selector:
    app: pulsar-standalone
  ports:
  - name: broker
    port: 6650
    targetPort: 6650
  - name: http
    port: 8080
    targetPort: 8080
  - name: zookeeper
    port: 2181
    targetPort: 2181
---
apiVersion: v1
kind: Service
metadata:
  name: pulsar-broker
  namespace: pulsar
spec:
  type: ClusterIP
  selector:
    app: pulsar-standalone
  ports:
  - name: broker
    port: 6650
    targetPort: 6650
  - name: http
    port: 8080
    targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: pulsar-external
  namespace: pulsar
spec:
  type: NodePort
  selector:
    app: pulsar-standalone
  ports:
  - name: broker
    port: 6650
    targetPort: 6650
    nodePort: 30650
  - name: http
    port: 8080
    targetPort: 8080
    nodePort: 30080